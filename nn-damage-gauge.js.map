{"version":3,"file":"nn-damage-gauge.js","sourceRoot":"","sources":["src/nn-damage-gauge.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html } from 'lit';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { customElement, property, state } from 'lit/decorators.js';\n\n@customElement('nn-damage-gauge')\nexport class NNDamageGauge extends LitElement {\n  @property({ type: Number }) hp: number = 100;\n  @property({ type: Number }) step: number = 5;\n  @property({ type: Boolean }) undead: boolean = false;\n  @property({ type: Number })\n  get value() {\n    return this.gauge;\n  }\n  set value(value) {\n    this.gauge = value;\n  }\n  @state() gauge: number = 100;\n  @state() active: boolean = false;\n  @state() shakeInterval?: NodeJS.Timeout;\n  @state() dead = false;\n\n  protected addDamage() {\n    this.gauge = this.gauge - (this.gauge < this.step ? this.gauge : this.step);\n    this.shake();\n    if (this.gauge <= 0 && !this.undead) {\n      this.dead = true;\n    }\n    this.requestUpdate();\n  }\n\n  protected shake() {\n    if (this.shakeInterval) {\n      clearInterval(this.shakeInterval);\n    }\n    this.active = true;\n    let frame = 8;\n    const container = this.shadowRoot!.querySelector(\n      '#container'\n    ) as HTMLDivElement;\n    this.shakeInterval = setInterval(() => {\n      frame -= 1;\n      if (frame < 0) {\n        if (this.shakeInterval) {\n          clearInterval(this.shakeInterval);\n        }\n        this.active = false;\n        this.requestUpdate();\n      }\n\n      if (frame > 4) {\n        container!.style.transform = `translate3d(${Math.random() * 3}px,\n          ${Math.random() * 3}px,\n          ${Math.random() * 2}px)`;\n      }\n    }, 60);\n  }\n\n  public resurrect() {\n    this.gauge = this.hp;\n    this.dead = false;\n    this.requestUpdate();\n  }\n\n  render() {\n    const currentDamage = 100 - (this.gauge / this.hp) * 100;\n    return html`\n      <style>\n        .gauge-container {\n          position: relative;\n          cursor: pointer;\n        }\n        .gauge-container.dead .content {\n          animation: 0.4s ease-out 0s 1 forwards dead;\n        }\n        .gauge {\n          display: inline-flex;\n          position: absolute;\n          top: -6px;\n          right: -50%;\n          border: 2px solid #fff;\n          border-width: 2px 3px;\n          border-radius: 4px;\n          background: rgba(0, 0, 0, 0.72);\n          width: 100px;\n          height: 12px;\n          overflow: hidden;\n          box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.48);\n          visibility: hidden;\n        }\n        .gauge.active {\n          visibility: visible;\n        }\n        .current {\n          width: 100%;\n          height: 100%;\n          background: #f93131;\n          border-radius: 2px;\n        }\n        .sub {\n          border-radius: 1px;\n          position: absolute;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          background: #fff;\n          transition: transform 0.6s ease-out;\n        }\n        @keyframes dead {\n          0% {\n            opacity: 1;\n            filter: blur(0);\n          }\n          100% {\n            opacity: 0;\n            filter: blur(4px);\n          }\n        }\n      </style>\n      <div\n        id=\"container\"\n        class=${classMap({ 'gauge-container': true, dead: this.dead })}\n      >\n        <div class=${classMap({ gauge: true, active: this.active })}>\n          <div\n            class=\"sub\"\n            style=\"transform: translate(-${currentDamage}%)\"\n          ></div>\n          <div\n            class=\"current\"\n            style=\"transform: translate(-${currentDamage}%)\"\n          ></div>\n        </div>\n        <div class=\"content\" @click=${this.addDamage} tabindex=\"0\">\n          <slot></slot>\n        </div>\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'nn-damage-bar': NNDamageGauge;\n  }\n}\n"]}